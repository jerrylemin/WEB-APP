<style>
    .glowing-bg {
        background-image: radial-gradient(circle, var(--tw-gradient-from), var(--tw-gradient-to));
        background-position: center;
        background-size: 150%;
    }
</style>
<main class="relative">
    <div class="full-info hidden bg-black/80 z-50 p-10 fixed inset-0">
        <div class="full-info-cnt bg-white rounded-lg absolute inset-10 overflow-y-scroll p-5">
            
        </div>
    </div>
    <div class="introduction h-[calc(100vh-158px)] relative">
        <div class="p-10 flex flex-col justify-center items-center lg:absolute lg:left-[40%] lg:top-[20%] lg:w-[50%]">
            <h1 class="text-red text-bigger font-bold font-title">Brewtiful xin chào!</h1> 
            <p class="text-medium font-serif">Vui lòng lướt xuống để xem các món nước của chúng mình nhé!</p>
        </div>
        <img class="invisible lg:visible h-[100%] w-auto absolute left-[10%] top-[-10%]" src="/images/webPageResources/bg/bobacup.png" alt="Chúc bạn ngon miệng!">
    </div>
    <div class="bg-[url('/images/webPageResources/bg/bg_greenSplash.png')] bg-fixed bg-top bg-contain bg-no-repeat">
        <article class="w-9/12 mx-auto my-10">
            <div class="combobox mb-5 flex justify-center gap-4">
                <!-- <label for="product-category" class="block text-lg font-semibold mb-2">Phân loại</label> -->
                <select id="product-category" class="border border-gray-300 rounded p-2 w-[150px]">
                    <option value="" disabled selected>Phân loại</option>
                    <option value="traditional-tea">Trà sữa truyền thống</option>
                    <option value="fruit-tea">Trà trái cây</option>
                    <option value="pure-tea">Trà nguyên chất</option>
                    <option value="fresh-milk-cheese">Sữa tươi và kem cheese</option>
                    <option value="blended-ice">Đá xay</option>
                    <option value="special-drink">Thức uống đặc biệt</option>
                    <option value="seasonal-drink">Thức uống theo mùa</option>
                    <option value="sweet-cake">Bánh ngọt</option>
                </select>
                <select id="price-category" class="border border-gray-300 rounded p-2 w-[150px]">
                    <option value="" disabled selected>Giá</option>
                </select>
            </div>
            <div class="items min-h-screen w-full justify-center grid grid-flow-row auto-rows-auto grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-7">
                <% products.forEach(p => { %>
                    <div data-product-id="<%= p._id %>" class="parentOfGlow group bg-yellow/50 border border-yellow/50 rounded-outer p-1 backdrop-blur-lg flex flex-col justify-between transition-transform transition-shadow duration-200 hover:shadow-lg hover:scale-110 relative">
                        <div class="glowing-bg absolute inset-0 pointer-events-none tr  ansition-opacity opacity-0 group-hover:opacity-100 duration-200 from-yellow/20 to-white/20"></div>
                        <div class="info h-3/4">
                            <img class="w-full rounded-inner aspect-square" src="<%= p.image %>" alt="">
                            <p class="font-bold font-serif text-medium"><%= p.name %></p>
                            <p class="font-serif text-medium"><%= p.price %>đ</p>
                        </div>
                        <div class="flex justify-center cursor-pointer">
                            <div class="bttn rounded-full bg-red w-[40px] h-[40px] flex justify-center items-center">
                                <i class="fa-solid fa-plus text-white bttn"></i>
                            </div>
                        </div>
                    </div>
                <% }); %>
            </div>
        </article>
    </div>
    <div class="fixed bottom-0 right-0 m-4">
        <div id="notification" class="bg-yellow/40 backdrop-blur-lg text-white p-4 rounded-lg border border-yellow shadow-md hidden">
            <p id="notification-message" class="font-bold font-serif text-medium text-black"></p>
        </div>
    </div>
</main>
<script>
    function showNotification(message) {
        const notification = document.getElementById("notification");
        const notificationMessage = document.getElementById("notification-message");
        notification.classList.remove("hidden");
        notificationMessage.textContent = message;
        setTimeout(() => {
            notification.classList.add("hidden");
        }, 3000);
    }
 
    const bttns = document.querySelectorAll(".bttn");
    bttns.forEach(async (bttn) => {
        bttn.addEventListener("click", async (e) => {
            e.preventDefault();
            const productId = bttn.parentNode.parentNode.getAttribute("data-product-id");
            try {
                const res = await fetch(`/cart/add/${productId}`, { method: 'POST' });          
                const noti = await res.text();
                showNotification(noti);
            } 
            catch(e) {
                console.log(e);
            }
        });
    });

    document.querySelector(".full-info").addEventListener("click", (e) => {
        e.currentTarget.classList.toggle("hidden");
    })

    document.querySelectorAll(".parentOfGlow").forEach((parent) => {
        parent.addEventListener("click", async (e) => {
            if(!e.target.classList.contains("bttn")) {
                // document.querySelector(".full-info-cnt").innerHTML = parent.querySelector(".info-storage").innerHTML;
                try {
                    const prod = await fetch(`/products/${parent.getAttribute("data-product-id")}`);
                    const res = await prod.json();
                    console.log(res);
                    document.querySelector(".full-info-cnt").innerHTML = `
                        <h1 class="text-center text-big font-serif">${res.name}</h1>
                        <div class="flex justify-center m-4">
                            <img class="rounded-inner aspect-square w-1/2" src="${res.image}" alt="">
                        </div>
                        <p><b>Mô tả</b>: ${res.description}</p>
                        <p><b>Phân loại</b>: ${res.category}</p>
                        <p><b>Kho</b>: ${res.stock}</p>
                        <p><b>Giá</b>: ${res.price}đ</p>
                    `;
                    document.querySelector(".full-info").classList.toggle("hidden");
                }
                catch(e) {
                    console.log(e);
                }
            }
        });

        parent.addEventListener("mousemove", (e) => {
            const rect = e.currentTarget.getBoundingClientRect();
            let x = e.clientX - rect.left;
            let y = e.clientY - rect.top;
            const glowingBg = e.currentTarget.querySelector(".glowing-bg"); // Tìm trong phần tử cha hiện tại
            if (glowingBg) {
                glowingBg.style.setProperty("background-position", `${x}px ${y}px`);
            }
        });
    });

</script>